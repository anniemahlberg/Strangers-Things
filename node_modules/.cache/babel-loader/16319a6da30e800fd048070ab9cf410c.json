{"ast":null,"code":"var _jsxFileName = \"/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/posts.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B';\n\nconst Posts = props => {\n  _s();\n\n  const {\n    userName,\n    setAlertMessage,\n    setPostID,\n    setPostIndex,\n    setPostArray,\n    postArray\n  } = props;\n  const history = useHistory();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const posts = await fetch(`${API_URL}/posts`);\n        const postsResults = await posts.json();\n        setPostArray(postsResults.data.posts);\n        return postsResults.data.posts;\n      } catch (err) {\n        console.error('Unable to fetch posts', err);\n      }\n    };\n\n    const renderPosts = postList => {\n      let postsContainer = document.getElementById('posts-container');\n\n      if (!postList) {\n        postsContainer.innerHTML = \"No posts to display\";\n        return;\n      }\n\n      let postsContainterHTML = '';\n\n      for (let i = 0; i < postList.length; i++) {\n        const post = postList[i];\n        let postHTML = `\n                    <div class=\"single-post\">\n                        <div class=\"post-title\">\n                            <h2>${post.title}</h2>\n                            <div class=\"send-message\">\n                                <button data-id=${post._id} class=\"view-post-button\">${post.author.username === userName ? \"VIEW MY POST\" : \"SEND MESSAGE\"}</button>\n                            </div>\n                        </div>\n                        <div class=\"post-description\">\n                            <p>${post.description}</p>\n                        </div>\n                        <div class=\"post-price\">\n                            <p>Price: ${post.price}</p>\n                        </div>\n                        <div class=\"post-location\">\n                            <p>Location: ${post.location}</p>\n                        </div>\n                        <div class=\"post-username\">\n                            <p>Seller: ${post.author.username}</p>\n                        </div>\n                    </div>\n                `;\n        postsContainterHTML += postHTML;\n      }\n\n      postsContainer.innerHTML = postsContainterHTML;\n      let viewPostButtons = [...document.getElementsByClassName('view-post-button')];\n\n      for (let j = 0; j < viewPostButtons.length; j++) {\n        const button = viewPostButtons[j];\n        button.addEventListener('click', () => {\n          if (userName) {\n            setPostID(button.dataset.id);\n            setPostIndex(j);\n            history.push('/viewPost');\n          } else {\n            setAlertMessage(\"You must be logged in to send a message.\");\n            history.push('/login');\n          }\n        });\n      }\n    };\n\n    const initialPosts = async () => {\n      const posts = await fetchPosts();\n      renderPosts(posts);\n    };\n\n    initialPosts();\n    console.log(postArray);\n  }, postArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: userName ? `Welcome back ${userName}!!` : `Welcome! Log in to get started!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"post-stuff\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"add-post\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (userName) {\n              history.push('/newPost');\n            } else {\n              setAlertMessage(\"You must be logged in in order to make a post.\");\n              history.push('/login');\n            }\n          },\n          children: \"Create New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"posts-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useHistory","API_URL","Posts","props","userName","setAlertMessage","setPostID","setPostIndex","setPostArray","postArray","history","fetchPosts","posts","fetch","postsResults","json","data","err","console","error","renderPosts","postList","postsContainer","document","getElementById","innerHTML","postsContainterHTML","i","length","post","postHTML","title","_id","author","username","description","price","location","viewPostButtons","getElementsByClassName","j","button","addEventListener","dataset","id","push","initialPosts","log"],"sources":["/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/posts.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B'\n\nconst Posts = (props) => {\n    const { userName, setAlertMessage, setPostID, setPostIndex, setPostArray, postArray } = props;\n    const history = useHistory();\n    \n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const posts = await fetch(`${API_URL}/posts`);\n                const postsResults = await posts.json();\n                setPostArray(postsResults.data.posts)\n                return postsResults.data.posts;\n    \n            } catch (err) {\n                console.error('Unable to fetch posts', err);\n            }\n        }\n        \n        const renderPosts = (postList) => {\n            let postsContainer = document.getElementById('posts-container')\n        \n            if (!postList) {\n                postsContainer.innerHTML = \"No posts to display\"\n                return;\n            }\n        \n            let postsContainterHTML = '';\n            for (let i = 0; i < postList.length; i++) {\n                const post = postList[i];\n                \n                let postHTML = `\n                    <div class=\"single-post\">\n                        <div class=\"post-title\">\n                            <h2>${post.title}</h2>\n                            <div class=\"send-message\">\n                                <button data-id=${post._id} class=\"view-post-button\">${post.author.username === userName ? \"VIEW MY POST\" : \"SEND MESSAGE\"}</button>\n                            </div>\n                        </div>\n                        <div class=\"post-description\">\n                            <p>${post.description}</p>\n                        </div>\n                        <div class=\"post-price\">\n                            <p>Price: ${post.price}</p>\n                        </div>\n                        <div class=\"post-location\">\n                            <p>Location: ${post.location}</p>\n                        </div>\n                        <div class=\"post-username\">\n                            <p>Seller: ${post.author.username}</p>\n                        </div>\n                    </div>\n                `;\n        \n                postsContainterHTML += postHTML;\n            }\n    \n            postsContainer.innerHTML = postsContainterHTML;\n    \n            let viewPostButtons = [...document.getElementsByClassName('view-post-button')]\n            for (let j = 0; j < viewPostButtons.length; j++) {\n                const button = viewPostButtons[j];\n                button.addEventListener('click', () => {\n                    if (userName) {\n                        setPostID(button.dataset.id)\n                        setPostIndex(j)\n                        history.push('/viewPost')\n                    } else {\n                        setAlertMessage(\"You must be logged in to send a message.\")\n                        history.push('/login')\n                    }\n                });\n            }\n        }\n\n        const initialPosts = async () => {\n            const posts = await fetchPosts();\n            renderPosts(posts);\n        }\n\n        initialPosts();\n        console.log(postArray)     \n    }, postArray)\n            \n    return (\n        <div className=\"posts\">\n            <h1>{ userName ? `Welcome back ${userName}!!` : `Welcome! Log in to get started!`}</h1>\n            <div id=\"post-stuff\">\n                <div id=\"search-posts\">\n                    <input type='text' placeholder=\"Search Posts\"></input>\n                    <button>Search</button>\n                </div>\n                <div id=\"add-post\">\n                    <button onClick={() => {\n                        if (userName) {\n                            history.push('/newPost');\n                        } else {\n                            setAlertMessage(\"You must be logged in in order to make a post.\");\n                            history.push('/login')\n                        }\n                    }}>Create New Post</button>\n                </div>\n            </div>\n            <div id='posts-container'></div>\n        </div>\n    )\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module"}