{"ast":null,"code":"var _jsxFileName = \"/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/login.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B';\n\nconst postUser = async (userName, passWord) => {\n  const newUser = await fetch(`${API_URL}/users/register`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: passWord\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};\n\nconst formContainer = document.getElementById(\"form-container\");\n\nconst renderRegisterForm = () => {\n  let formHTML = `\n        <form>\n            <label>Username:</label>\n            <input id='username' type='text' placeholder=\"username\" required></input>\n            <br />\n            <label>Password:</label>\n            <input id='password1' type='password' placeholder=\"password\" required></input>\n            <br />\n            <label>Confirm Password:</label>\n            <input id='password2' type='password' placeholder=\"password\" required></input>\n            <button type=\"submit\">Submit</button>\n        </form>\n    `;\n  formContainer.innerHTML = formHTML;\n  let form = document.querySelector('#form-container > form');\n  form.addEventListener('submit', async event => {\n    event.preventDefault();\n    let userData = {\n      username: form.elements.name.value\n    };\n  });\n};\n\nrenderRegisterForm();\n\nconst Register = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"REGISTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"form-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["API_URL","postUser","userName","passWord","newUser","fetch","method","headers","body","JSON","stringify","user","username","password","then","response","json","result","console","log","catch","error","formContainer","document","getElementById","renderRegisterForm","formHTML","innerHTML","form","querySelector","addEventListener","event","preventDefault","userData","elements","name","value","Register"],"sources":["/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/login.js"],"sourcesContent":["const API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B'\n\n\nconst postUser = async (userName, passWord) => {\n    const newUser = await fetch(`${API_URL}/users/register`, {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            user: {\n                username: userName,\n                password: passWord\n            }\n        })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error)\n}\n\nconst formContainer = document.getElementById(\"form-container\")\n\nconst renderRegisterForm = () => {\n    let formHTML = `\n        <form>\n            <label>Username:</label>\n            <input id='username' type='text' placeholder=\"username\" required></input>\n            <br />\n            <label>Password:</label>\n            <input id='password1' type='password' placeholder=\"password\" required></input>\n            <br />\n            <label>Confirm Password:</label>\n            <input id='password2' type='password' placeholder=\"password\" required></input>\n            <button type=\"submit\">Submit</button>\n        </form>\n    `;\n\n    formContainer.innerHTML = formHTML;\n\n    let form = document.querySelector('#form-container > form')\n    form.addEventListener('submit', async (event) => {\n        event.preventDefault();\n\n        let userData = {\n            username: form.elements.name.value\n        }\n    })\n}\n\nrenderRegisterForm();\n\nconst Register = () => {\n\n    return (\n        <div className=\"register\">\n            <h1>REGISTER</h1>\n            <div id=\"form-container\"></div>\n        </div>\n    )\n}\n\nexport default Register;"],"mappings":";;AAAA,MAAMA,OAAO,GAAG,iEAAhB;;AAGA,MAAMC,QAAQ,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAC3C,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,iBAAZ,EAA8B;IACrDM,MAAM,EAAE,MAD6C;IAErDC,OAAO,EAAE;MACL,gBAAgB;IADX,CAF4C;IAKrDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACjBC,IAAI,EAAE;QACFC,QAAQ,EAAEV,QADR;QAEFW,QAAQ,EAAEV;MAFR;IADW,CAAf;EAL+C,CAA9B,CAAL,CAWnBW,IAXmB,CAWdC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXE,EAYrBF,IAZqB,CAYhBG,MAAM,IAAI;IACZC,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACH,CAdqB,EAerBG,KAfqB,CAefF,OAAO,CAACG,KAfO,CAAtB;AAgBH,CAjBD;;AAmBA,MAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAtB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;EAC7B,IAAIC,QAAQ,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAZI;EAcAJ,aAAa,CAACK,SAAd,GAA0BD,QAA1B;EAEA,IAAIE,IAAI,GAAGL,QAAQ,CAACM,aAAT,CAAuB,wBAAvB,CAAX;EACAD,IAAI,CAACE,gBAAL,CAAsB,QAAtB,EAAgC,MAAOC,KAAP,IAAiB;IAC7CA,KAAK,CAACC,cAAN;IAEA,IAAIC,QAAQ,GAAG;MACXrB,QAAQ,EAAEgB,IAAI,CAACM,QAAL,CAAcC,IAAd,CAAmBC;IADlB,CAAf;EAGH,CAND;AAOH,CAzBD;;AA2BAX,kBAAkB;;AAElB,MAAMY,QAAQ,GAAG,MAAM;EAEnB,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,EAAE,EAAC;IAAR;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CARD;;KAAMA,Q;AAUN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}