{"ast":null,"code":"var _jsxFileName = \"/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/viewPost.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B';\n\nconst ViewPost = props => {\n  const {\n    postIndex,\n    userName,\n    token,\n    postID,\n    setAlertMessage\n  } = props;\n\n  const fetchThisPost = async () => {\n    try {\n      const posts = await fetch(`${API_URL}/posts`);\n      const postsResults = await posts.json();\n      return postsResults.data.posts[postIndex];\n    } catch (err) {\n      console.error('Unable to fetch posts', err);\n    }\n  };\n\n  const renderPost = postInfo => {\n    let postDiv = document.getElementById(\"post-div\");\n\n    if (!postInfo) {\n      postDiv.innerHTML = \"No such post exists.\";\n    } else if (userName === postInfo.author.username) {\n      postDiv.innerHTML = `\n                <div class=\"single-post-container\">\n                    <div class=\"single-post-title\">\n                        <h2>${postInfo.title}</h2>\n                    </div>\n                    <div class=\"single-post-description\">\n                        <p>${postInfo.description}</p>\n                    </div>\n                    <div class=\"single-post-price\">\n                        <p>Price: ${postInfo.price}</p>\n                    </div>\n                    <div class=\"single-post-location\">\n                        <p>Location: ${postInfo.location}\n                    </div>\n                    <div class=\"single-post-author\">\n                        <p>Seller: ${postInfo.author.username}</p>\n                    </div>\n                </div>\n                <div class=\"single-post-buttons\">\n                    <div class=\"single-post-edit\">\n                        <button class=\"edit-post-button\">EDIT POST</button>\n                        <button class=\"delete-post-button\">DELETE POST</button>\n                    </div>\n                </div>`;\n    } else {\n      postDiv.innerHTML = `\n            <div class=\"single-post-container\">\n                <div class=\"single-post-title\">\n                    <h2>${postInfo.title}</h2>\n                </div>\n                <div class=\"single-post-description\">\n                    <p>${postInfo.description}</p>\n                </div>\n                <div class=\"single-post-price\">\n                    <p>Price: ${postInfo.price}</p>\n                </div>\n                <div class=\"single-post-location\">\n                    <p>Location: ${postInfo.location}\n                </div>\n                <div class=\"single-post-author\">\n                    <p>Seller: ${postInfo.author.username}</p>\n                </div>\n            </div>\n            <div class=\"single-post-message\">\n                <h3>Message User About This Post</h3>\n                <textarea placeholder=\"Type Message Here\"></textarea>\n                <div class=\"single-post-message-button\">\n                    <button class=\"send-message-button\">SEND MESSAGE</button>\n                </div>\n            </div>`;\n    }\n\n    let deletePostButtons = [...document.getElementsByClassName('delete-post-button')];\n\n    for (let j = 0; j < deletePostButtons.length; j++) {\n      const button = deletePostButtons[j];\n      button.addEventListener('click', () => {\n        setAlertMessage(\"Your post has been deleted.\");\n      });\n    }\n  };\n\n  const deletePost = async () => {\n    await fetch(`${API_URL}/posts/${postID}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer TOKEN_STRING_HERE`\n      }\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  const showPost = async () => {\n    const post = await fetchThisPost();\n    renderPost(post);\n  };\n\n  showPost();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"post-div\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ViewPost;\nexport default ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"names":["API_URL","ViewPost","props","postIndex","userName","token","postID","setAlertMessage","fetchThisPost","posts","fetch","postsResults","json","data","err","console","error","renderPost","postInfo","postDiv","document","getElementById","innerHTML","author","username","title","description","price","location","deletePostButtons","getElementsByClassName","j","length","button","addEventListener","deletePost","method","headers","then","response","result","log","catch","showPost","post"],"sources":["/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/viewPost.js"],"sourcesContent":["const API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B'\n\nconst ViewPost = (props) => {\n    const { postIndex, userName, token, postID, setAlertMessage } = props;\n\n    const fetchThisPost = async () => {\n        try {\n            const posts = await fetch(`${API_URL}/posts`);\n            const postsResults = await posts.json();\n            return postsResults.data.posts[postIndex];\n\n        } catch (err) {\n            console.error('Unable to fetch posts', err);\n        }\n    }\n\n    const renderPost = (postInfo) => {\n        let postDiv = document.getElementById(\"post-div\")\n        \n        if (!postInfo) {\n            postDiv.innerHTML = \"No such post exists.\"\n        } else if (userName === postInfo.author.username) {\n            postDiv.innerHTML = `\n                <div class=\"single-post-container\">\n                    <div class=\"single-post-title\">\n                        <h2>${postInfo.title}</h2>\n                    </div>\n                    <div class=\"single-post-description\">\n                        <p>${postInfo.description}</p>\n                    </div>\n                    <div class=\"single-post-price\">\n                        <p>Price: ${postInfo.price}</p>\n                    </div>\n                    <div class=\"single-post-location\">\n                        <p>Location: ${postInfo.location}\n                    </div>\n                    <div class=\"single-post-author\">\n                        <p>Seller: ${postInfo.author.username}</p>\n                    </div>\n                </div>\n                <div class=\"single-post-buttons\">\n                    <div class=\"single-post-edit\">\n                        <button class=\"edit-post-button\">EDIT POST</button>\n                        <button class=\"delete-post-button\">DELETE POST</button>\n                    </div>\n                </div>`\n        } else {\n            postDiv.innerHTML = `\n            <div class=\"single-post-container\">\n                <div class=\"single-post-title\">\n                    <h2>${postInfo.title}</h2>\n                </div>\n                <div class=\"single-post-description\">\n                    <p>${postInfo.description}</p>\n                </div>\n                <div class=\"single-post-price\">\n                    <p>Price: ${postInfo.price}</p>\n                </div>\n                <div class=\"single-post-location\">\n                    <p>Location: ${postInfo.location}\n                </div>\n                <div class=\"single-post-author\">\n                    <p>Seller: ${postInfo.author.username}</p>\n                </div>\n            </div>\n            <div class=\"single-post-message\">\n                <h3>Message User About This Post</h3>\n                <textarea placeholder=\"Type Message Here\"></textarea>\n                <div class=\"single-post-message-button\">\n                    <button class=\"send-message-button\">SEND MESSAGE</button>\n                </div>\n            </div>`\n        }\n\n        let deletePostButtons = [...document.getElementsByClassName('delete-post-button')]\n        for (let j = 0; j < deletePostButtons.length; j++) {\n            const button = deletePostButtons[j];\n            button.addEventListener('click', () => {\n                setAlertMessage(\"Your post has been deleted.\")\n            });\n        }\n    }\n\n    const deletePost = async () => {\n        await fetch(`${API_URL}/posts/${postID}`, {\n        method: \"DELETE\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer TOKEN_STRING_HERE`\n        }\n        }).then(response => response.json())\n        .then(result => {\n            console.log(result);\n        })\n        .catch(console.error);\n    }\n\n    const showPost = async () => {\n        const post = await fetchThisPost()\n        renderPost(post);\n    }\n\n    showPost();\n\n    return (\n        <div id=\"post-div\"></div>\n    )\n}\n\nexport default ViewPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}