{"ast":null,"code":"var _jsxFileName = \"/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/viewPost.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B';\n\nconst ViewPost = props => {\n  const {\n    postIndex,\n    userName,\n    token\n  } = props;\n\n  const fetchThisPost = async () => {\n    try {\n      const posts = await fetch(`${API_URL}/posts`);\n      const postsResults = await posts.json();\n      return postsResults.data.posts[postIndex];\n    } catch (err) {\n      console.error('Unable to fetch posts', err);\n    }\n  };\n\n  const renderPost = postInfo => {\n    let postDiv = document.getElementById(\"post-div\");\n\n    if (!postInfo) {\n      postDiv.innerHTML = \"No such post exists.\";\n    } else {\n      postDiv.innerHTML = `\n                <div class=\"single-post-container\">\n                    <div class=\"single-post-title\">\n                        <h2>${postInfo.title}</h2>\n                    </div>\n                    <div class=\"single-post-description\">\n                        <p>${postInfo.description}</p>\n                    </div>\n                    <div class=\"single-post-price\">\n                        <p>Price: ${postInfo.price}</p>\n                    </div>\n                    <div class=\"single-post-location\">\n                        <p>Location: ${postInfo.location}\n                    </div>\n                    <div class=\"single-post-author\">\n                        <p>Seller: ${postInfo.author.username}</p>\n                    </div>\n                </div>`;\n    }\n  };\n\n  const showPost = async () => {\n    const post = await fetchThisPost();\n    renderPost(post);\n  };\n\n  showPost();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"post-div\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ViewPost;\nexport default ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"names":["API_URL","ViewPost","props","postIndex","userName","token","fetchThisPost","posts","fetch","postsResults","json","data","err","console","error","renderPost","postInfo","postDiv","document","getElementById","innerHTML","title","description","price","location","author","username","showPost","post"],"sources":["/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/viewPost.js"],"sourcesContent":["const API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B'\n\nconst ViewPost = (props) => {\n    const { postIndex, userName, token } = props;\n\n    const fetchThisPost = async () => {\n        try {\n            const posts = await fetch(`${API_URL}/posts`);\n            const postsResults = await posts.json();\n            return postsResults.data.posts[postIndex];\n\n        } catch (err) {\n            console.error('Unable to fetch posts', err);\n        }\n    }\n\n    const renderPost = (postInfo) => {\n        let postDiv = document.getElementById(\"post-div\")\n        \n        if (!postInfo) {\n            postDiv.innerHTML = \"No such post exists.\"\n        } else {\n            postDiv.innerHTML = `\n                <div class=\"single-post-container\">\n                    <div class=\"single-post-title\">\n                        <h2>${postInfo.title}</h2>\n                    </div>\n                    <div class=\"single-post-description\">\n                        <p>${postInfo.description}</p>\n                    </div>\n                    <div class=\"single-post-price\">\n                        <p>Price: ${postInfo.price}</p>\n                    </div>\n                    <div class=\"single-post-location\">\n                        <p>Location: ${postInfo.location}\n                    </div>\n                    <div class=\"single-post-author\">\n                        <p>Seller: ${postInfo.author.username}</p>\n                    </div>\n                </div>`\n            \n        }\n    }\n\n    const showPost = async () => {\n        const post = await fetchThisPost()\n        renderPost(post);\n    }\n\n    showPost();\n\n    return (\n        <div id=\"post-div\"></div>\n    )\n}\n\nexport default ViewPost;"],"mappings":";;AAAA,MAAMA,OAAO,GAAG,iEAAhB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EACxB,MAAM;IAAEC,SAAF;IAAaC,QAAb;IAAuBC;EAAvB,IAAiCH,KAAvC;;EAEA,MAAMI,aAAa,GAAG,YAAY;IAC9B,IAAI;MACA,MAAMC,KAAK,GAAG,MAAMC,KAAK,CAAE,GAAER,OAAQ,QAAZ,CAAzB;MACA,MAAMS,YAAY,GAAG,MAAMF,KAAK,CAACG,IAAN,EAA3B;MACA,OAAOD,YAAY,CAACE,IAAb,CAAkBJ,KAAlB,CAAwBJ,SAAxB,CAAP;IAEH,CALD,CAKE,OAAOS,GAAP,EAAY;MACVC,OAAO,CAACC,KAAR,CAAc,uBAAd,EAAuCF,GAAvC;IACH;EACJ,CATD;;EAWA,MAAMG,UAAU,GAAIC,QAAD,IAAc;IAC7B,IAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAd;;IAEA,IAAI,CAACH,QAAL,EAAe;MACXC,OAAO,CAACG,SAAR,GAAoB,sBAApB;IACH,CAFD,MAEO;MACHH,OAAO,CAACG,SAAR,GAAqB;AACjC;AACA;AACA,8BAA8BJ,QAAQ,CAACK,KAAM;AAC7C;AACA;AACA,6BAA6BL,QAAQ,CAACM,WAAY;AAClD;AACA;AACA,oCAAoCN,QAAQ,CAACO,KAAM;AACnD;AACA;AACA,uCAAuCP,QAAQ,CAACQ,QAAS;AACzD;AACA;AACA,qCAAqCR,QAAQ,CAACS,MAAT,CAAgBC,QAAS;AAC9D;AACA,uBAjBY;IAmBH;EACJ,CA1BD;;EA4BA,MAAMC,QAAQ,GAAG,YAAY;IACzB,MAAMC,IAAI,GAAG,MAAMtB,aAAa,EAAhC;IACAS,UAAU,CAACa,IAAD,CAAV;EACH,CAHD;;EAKAD,QAAQ;EAER,oBACI;IAAK,EAAE,EAAC;EAAR;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CApDD;;KAAM1B,Q;AAsDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}