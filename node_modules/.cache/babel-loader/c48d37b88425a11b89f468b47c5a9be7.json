{"ast":null,"code":"var _jsxFileName = \"/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/messages.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B';\n\nconst Messages = props => {\n  _s();\n\n  const {\n    token,\n    userName,\n    setPostID,\n    setPostIndex,\n    setAlertMessage\n  } = props;\n  const history = useHistory();\n\n  const fetchPosts = async () => {\n    try {\n      const posts = await fetch(`${API_URL}/posts`);\n      const postsResults = await posts.json();\n      return postsResults.data.posts;\n    } catch (err) {\n      console.error('Unable to fetch posts', err);\n    }\n  };\n\n  const getMessages = async () => {\n    try {\n      const messages = await fetch(`${API_URL}/users/me`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const messagesResults = await messages.json();\n      return messagesResults.data.messages;\n    } catch (err) {\n      console.error('Unable to fetch messages', err);\n    }\n  };\n\n  const renderMessages = messageList => {\n    let inboxContainer = document.getElementById('inbox');\n    let sentContainer = document.getElementById('sent');\n    let inboxContainerHTML = '';\n    let sentContainerHTML = '';\n\n    for (let i = 0; i < messageList.length; i++) {\n      const message = messageList[i];\n      let inboxHTML = \"\";\n      let sentHTML = \"\";\n\n      const checkIfDeleted = () => {\n        fetchPosts().then(result => {\n          for (let index = 0; index < result.length; index++) {\n            let currentPost = result[index];\n            console.log(message.post.title, \"message id: \", message.post._id);\n            console.log(currentPost.title, \"post id: \", currentPost._id);\n            console.log(index, message.post._id === currentPost._id);\n\n            if (message.post._id === currentPost._id) {\n              console.log(index, messag);\n              return true;\n            }\n          }\n\n          return false;\n        });\n      }; // console.log(checkIfDeleted())\n\n\n      if (message.fromUser.username !== userName) {\n        inboxHTML += `<div class='single-message'>\n                    <div class='sm-header'>\n                        <div class='sm-title'>\n                            <h2>${message.post.title}</h2>\n                        </div>\n                        <div class='sm-button'>\n                            <button class=\"sm-view\" data-id=${message.post._id}>${checkIfDeleted() ? \"View Post\" : \"This post has been deleted\"}</button>\n                        </div>\n                    </div>\n                    <div class='sm-content'>\n                        <p>${message.content}</p>\n                    </div>\n                    <div class='sm-author'>\n                        <h3>From: ${message.fromUser.username !== userName ? message.fromUser.username : \"ME\"}</h3>\n                    </div>\n                </div>`;\n      } else {\n        sentHTML += `<div class='single-message'>\n                    <div class='sm-header'>\n                        <div class='sm-title'>\n                            <h2>${message.post.title}</h2>\n                        </div>\n                        <div class='sm-button'>\n                            <button class=\"sm-view\" data-id=${message.post._id}>${checkIfDeleted() ? \"View Post\" : \"This post has been deleted\"}</button>\n                        </div>\n                    </div>\n                    <div class='sm-content'>\n                        <p>${message.content}</p>\n                    </div>\n                    <div class='sm-author'>\n                        <h3>From: ${message.fromUser.username !== userName ? message.fromUser.username : \"ME\"}</h3>\n                    </div>\n                </div>`;\n      }\n\n      inboxContainerHTML += inboxHTML;\n      sentContainerHTML += sentHTML;\n    }\n\n    inboxContainer.innerHTML = `<h2>INBOX</h2> ${inboxContainerHTML}`;\n    sentContainer.innerHTML = `<h2>SENT</h2> ${sentContainerHTML}`;\n    let viewMessagePostButton = [...document.getElementsByClassName('sm-view')];\n\n    for (let x = 0; x < viewMessagePostButton.length; x++) {\n      const button1 = viewMessagePostButton[x];\n      button1.addEventListener('click', () => {\n        setPostID(button1.dataset.id);\n        fetchPosts().then(result => {\n          for (let k = 0; k < result.length; k++) {\n            let currentObject = result[k];\n\n            if (currentObject._id === button1.dataset.id) {\n              setPostIndex(k);\n              history.push('/viewPost');\n            } else {\n              button1.setAttribute(\"disabled\", \"\");\n              button1.innerHTML = \"This post has been deleted\";\n              setAlertMessage(\"This post has been deleted and no longer exists.\");\n            }\n          }\n        });\n      });\n    }\n  };\n\n  const initialMessages = async () => {\n    const messages = await getMessages();\n    renderMessages(messages);\n  };\n\n  initialMessages();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"message-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Messages, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["useHistory","API_URL","Messages","props","token","userName","setPostID","setPostIndex","setAlertMessage","history","fetchPosts","posts","fetch","postsResults","json","data","err","console","error","getMessages","messages","headers","messagesResults","renderMessages","messageList","inboxContainer","document","getElementById","sentContainer","inboxContainerHTML","sentContainerHTML","i","length","message","inboxHTML","sentHTML","checkIfDeleted","then","result","index","currentPost","log","post","title","_id","messag","fromUser","username","content","innerHTML","viewMessagePostButton","getElementsByClassName","x","button1","addEventListener","dataset","id","k","currentObject","push","setAttribute","initialMessages"],"sources":["/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/messages.js"],"sourcesContent":["import { useHistory } from \"react-router-dom\";\n\nconst API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B'\n\nconst Messages = (props) => {\n    const { token, userName, setPostID, setPostIndex, setAlertMessage } = props;\n    const history = useHistory();\n\n    const fetchPosts = async () => {\n        try {\n            const posts = await fetch(`${API_URL}/posts`);\n            const postsResults = await posts.json();\n            return postsResults.data.posts;\n\n        } catch (err) {\n            console.error('Unable to fetch posts', err);\n        }\n    }\n\n    const getMessages = async () => {\n        try {\n            const messages = await fetch(`${API_URL}/users/me`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },})\n            const messagesResults = await messages.json();\n            return messagesResults.data.messages;\n        } catch (err) {\n            console.error('Unable to fetch messages', err);\n        }\n    }\n\n    const renderMessages = (messageList) => {    \n        let inboxContainer = document.getElementById('inbox')\n        let sentContainer = document.getElementById('sent')\n        let inboxContainerHTML = '';\n        let sentContainerHTML = '';\n        \n        for (let i = 0; i < messageList.length; i++) {\n            const message = messageList[i];\n            let inboxHTML = \"\"\n            let sentHTML = \"\"\n            \n            const checkIfDeleted = () => {\n                fetchPosts().then((result) => {\n                    for (let index = 0; index < result.length; index++) {\n                        let currentPost = result[index]\n                        console.log(message.post.title, \"message id: \", message.post._id)\n                        console.log(currentPost.title, \"post id: \", currentPost._id)\n                        console.log(index, message.post._id === currentPost._id)\n                        if (message.post._id === currentPost._id) {\n                            console.log(index, messag)\n                            return true;\n                        }\n                    }\n                    return false;\n                })\n            }\n\n            // console.log(checkIfDeleted())\n\n            if (message.fromUser.username !== userName) {\n                inboxHTML += \n                `<div class='single-message'>\n                    <div class='sm-header'>\n                        <div class='sm-title'>\n                            <h2>${message.post.title}</h2>\n                        </div>\n                        <div class='sm-button'>\n                            <button class=\"sm-view\" data-id=${message.post._id}>${checkIfDeleted() ? \"View Post\" : \"This post has been deleted\"}</button>\n                        </div>\n                    </div>\n                    <div class='sm-content'>\n                        <p>${message.content}</p>\n                    </div>\n                    <div class='sm-author'>\n                        <h3>From: ${message.fromUser.username !== userName ? message.fromUser.username : \"ME\"}</h3>\n                    </div>\n                </div>`;\n            } else {\n                sentHTML +=\n                `<div class='single-message'>\n                    <div class='sm-header'>\n                        <div class='sm-title'>\n                            <h2>${message.post.title}</h2>\n                        </div>\n                        <div class='sm-button'>\n                            <button class=\"sm-view\" data-id=${message.post._id}>${checkIfDeleted() ? \"View Post\" : \"This post has been deleted\"}</button>\n                        </div>\n                    </div>\n                    <div class='sm-content'>\n                        <p>${message.content}</p>\n                    </div>\n                    <div class='sm-author'>\n                        <h3>From: ${message.fromUser.username !== userName ? message.fromUser.username : \"ME\"}</h3>\n                    </div>\n                </div>`;\n            }\n\n            inboxContainerHTML += inboxHTML;\n            sentContainerHTML += sentHTML;\n        }\n        inboxContainer.innerHTML = `<h2>INBOX</h2> ${inboxContainerHTML}`;\n        sentContainer.innerHTML = `<h2>SENT</h2> ${sentContainerHTML}`;\n\n        let viewMessagePostButton = [...document.getElementsByClassName('sm-view')]\n        for (let x = 0; x < viewMessagePostButton.length; x++) {\n            const button1 = viewMessagePostButton[x];\n            button1.addEventListener('click', () => {\n                setPostID(button1.dataset.id);\n                fetchPosts().then((result) => {\n                    for (let k = 0; k < result.length; k++) {\n                        let currentObject = result[k]\n                        if (currentObject._id === button1.dataset.id) {\n                            setPostIndex(k)\n                            history.push('/viewPost')\n                        } else {\n                            button1.setAttribute(\"disabled\", \"\")\n                            button1.innerHTML = \"This post has been deleted\"\n                            setAlertMessage(\"This post has been deleted and no longer exists.\")\n                        }\n                    }\n                })\n            });\n        }\n\n    }\n\n    const initialMessages = async () => {\n        const messages = await getMessages();\n        renderMessages(messages)\n    }\n\n    initialMessages();\n\n    return (\n        <div id=\"message-container\">\n            <div id=\"inbox\"></div>\n            <div id=\"sent\"></div>\n        </div>\n    )\n}\n\nexport default Messages;"],"mappings":"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"},"metadata":{},"sourceType":"module"}