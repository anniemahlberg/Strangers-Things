{"ast":null,"code":"var _jsxFileName = \"/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/posts.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B';\n\nconst Posts = props => {\n  _s();\n\n  const {\n    userName,\n    setAlertMessage,\n    setPostID,\n    setPostIndex\n  } = props;\n  const history = useHistory();\n\n  const fetchPosts = async () => {\n    try {\n      const posts = await fetch(`${API_URL}/posts`);\n      const postsResults = await posts.json();\n      return postsResults.data.posts;\n    } catch (err) {\n      console.error('Unable to fetch posts', err);\n    }\n  };\n\n  const renderPosts = postList => {\n    let postsContainer = document.getElementById('posts-container');\n\n    if (!postList) {\n      postsContainer.innerHTML = \"No posts to display\";\n      return;\n    }\n\n    let postsContainterHTML = '';\n\n    for (let i = 0; i < postList.length; i++) {\n      const post = postList[i];\n      let postHTML = `\n                <div class=\"single-post\">\n                    <div class=\"post-title\">\n                        <h2>${post.title}</h2>\n                        <div class=\"send-message\">\n                            <button data-id=${post._id} class=\"view-post-button\">${post.author.username === userName ? \"VIEW MY POST\" : \"SEND MESSAGE\"}</button>\n                        </div>\n                    </div>\n                    <div class=\"post-description\">\n                        <p>${post.description}</p>\n                    </div>\n                    <div class=\"post-price\">\n                        <p>Price: ${post.price}</p>\n                    </div>\n                    <div class=\"post-location\">\n                        <p>Location: ${post.location}</p>\n                    </div>\n                    <div class=\"post-username\">\n                        <p>Seller: ${post.author.username}</p>\n                    </div>\n                </div>\n            `;\n      postsContainterHTML += postHTML;\n    } // postsContainer.innerHTML = postsContainterHTML;\n\n\n    let viewPostButtons = [...document.getElementsByClassName('view-post-button')];\n\n    for (let j = 0; j < viewPostButtons.length; j++) {\n      const button = viewPostButtons[j];\n      button.addEventListener('click', () => {\n        setPostID(button.dataset.id);\n        setPostIndex(j);\n        history.push('/viewPost');\n      });\n    }\n  };\n\n  const initialPosts = async () => {\n    const posts = await fetchPosts();\n    renderPosts(posts);\n  };\n\n  initialPosts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: userName ? `Welcome back ${userName}!!` : `Welcome! Log in to get started!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"post-stuff\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"add-post\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (userName) {\n              history.push('/newPost');\n            } else {\n              setAlertMessage(\"You must be logged in in order to make a post.\");\n              history.push('/login');\n            }\n          },\n          children: \"Create New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"posts-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useHistory","API_URL","Posts","props","userName","setAlertMessage","setPostID","setPostIndex","history","fetchPosts","posts","fetch","postsResults","json","data","err","console","error","renderPosts","postList","postsContainer","document","getElementById","innerHTML","postsContainterHTML","i","length","post","postHTML","title","_id","author","username","description","price","location","viewPostButtons","getElementsByClassName","j","button","addEventListener","dataset","id","push","initialPosts"],"sources":["/Users/annamahlberg/Documents/Bootcamp/course_work/project_09/strangerThings/src/posts.js"],"sourcesContent":["import { useHistory } from \"react-router-dom\";\n\nconst API_URL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-FT-B'\n\nconst Posts = (props) => {\n    const { userName, setAlertMessage, setPostID, setPostIndex } = props;\n    const history = useHistory();\n\n    const fetchPosts = async () => {\n        try {\n            const posts = await fetch(`${API_URL}/posts`);\n            const postsResults = await posts.json();\n            return postsResults.data.posts;\n\n        } catch (err) {\n            console.error('Unable to fetch posts', err);\n        }\n    }\n    \n    const renderPosts = (postList) => {\n        let postsContainer = document.getElementById('posts-container')\n    \n        if (!postList) {\n            postsContainer.innerHTML = \"No posts to display\"\n            return;\n        }\n    \n        let postsContainterHTML = '';\n        for (let i = 0; i < postList.length; i++) {\n            const post = postList[i];\n            \n            let postHTML = `\n                <div class=\"single-post\">\n                    <div class=\"post-title\">\n                        <h2>${post.title}</h2>\n                        <div class=\"send-message\">\n                            <button data-id=${post._id} class=\"view-post-button\">${post.author.username === userName ? \"VIEW MY POST\" : \"SEND MESSAGE\"}</button>\n                        </div>\n                    </div>\n                    <div class=\"post-description\">\n                        <p>${post.description}</p>\n                    </div>\n                    <div class=\"post-price\">\n                        <p>Price: ${post.price}</p>\n                    </div>\n                    <div class=\"post-location\">\n                        <p>Location: ${post.location}</p>\n                    </div>\n                    <div class=\"post-username\">\n                        <p>Seller: ${post.author.username}</p>\n                    </div>\n                </div>\n            `;\n    \n            postsContainterHTML += postHTML;\n        }\n\n        // postsContainer.innerHTML = postsContainterHTML;\n\n        let viewPostButtons = [...document.getElementsByClassName('view-post-button')]\n        for (let j = 0; j < viewPostButtons.length; j++) {\n            const button = viewPostButtons[j];\n            button.addEventListener('click', () => {\n                setPostID(button.dataset.id)\n                setPostIndex(j)\n                history.push('/viewPost')\n            });\n        }\n    }\n    \n    const initialPosts = async () => {\n        const posts = await fetchPosts();\n        renderPosts(posts);\n    }\n\n    initialPosts();\n    \n    return (\n        <div className=\"posts\">\n            <h1>{ userName ? `Welcome back ${userName}!!` : `Welcome! Log in to get started!`}</h1>\n            <div id=\"post-stuff\">\n                <div id=\"search-posts\">\n                    <input type='text' placeholder=\"Search Posts\"></input>\n                    <button>Search</button>\n                </div>\n                <div id=\"add-post\">\n                    <button onClick={() => {\n                        if (userName) {\n                            history.push('/newPost');\n                        } else {\n                            setAlertMessage(\"You must be logged in in order to make a post.\");\n                            history.push('/login')\n                        }\n                    }}>Create New Post</button>\n                </div>\n            </div>\n            <div id='posts-container'></div>\n        </div>\n    )\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module"}